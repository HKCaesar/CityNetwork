getwd()
executeAlgo <- function(query,resDir,numIteration,kwLimit){
#java command to execute algo from jar
# providing query and result directory
conf <- read.table('confRScript.conf',sep=";",header=TRUE)
command <- paste0('java -jar ',conf$jar,' ',query,' ',resDir,' ',numIteration,' ',kwLimit,' ',conf$conf)
show(paste('Executing ',command))
system(command)
res = read.table(paste0(resDir,"/stats.csv"),header=FALSE,sep=";")
return(res)
}
queries <- 'transportation+network+urban+growth'
resDir <- 'junk'
limits<-c(2)#,5,10,15,20)
maxIt <- 20
nrefs = matrix(data=rep(0,maxIt*length(limits)),nrow=maxIt)
for(l in 1:length(limits)){
res = executeAlgo(query,resDir,maxIt,limits[l])
for(k in 1:length(res[,1])){nrefs[k,l]=res[k,1]}
for(k in length(res[,1]):maxIt){nrefs[k,l]=nrefs[length(res[,1]),l]}
}
setwd('Models/Biblio/AlgoSR/')
queries <- 'transportation+network+urban+growth'
resDir <- 'junk'
limits<-c(2)#,5,10,15,20)
maxIt <- 20
nrefs = matrix(data=rep(0,maxIt*length(limits)),nrow=maxIt)
for(l in 1:length(limits)){
res = executeAlgo(query,resDir,maxIt,limits[l])
for(k in 1:length(res[,1])){nrefs[k,l]=res[k,1]}
for(k in length(res[,1]):maxIt){nrefs[k,l]=nrefs[length(res[,1]),l]}
}
query <- 'transportation+network+urban+growth'
resDir <- 'junk'
limits<-c(2)#,5,10,15,20)
maxIt <- 20
nrefs = matrix(data=rep(0,maxIt*length(limits)),nrow=maxIt)
for(l in 1:length(limits)){
res = executeAlgo(query,resDir,maxIt,limits[l])
for(k in 1:length(res[,1])){nrefs[k,l]=res[k,1]}
for(k in length(res[,1]):maxIt){nrefs[k,l]=nrefs[length(res[,1]),l]}
}
resDir <- 'junk'
limits<-c(2)#,5,10,15,20)
maxIt <- 20
for(query in queries){}
nrefs = matrix(data=rep(0,maxIt*length(limits)),nrow=maxIt)
for(l in 1:length(limits)){
res = executeAlgo(query,resDir,maxIt,limits[l])
for(k in 1:maxIt){nrefs[k,l]=res[k,1]}
#for(k in length(res[,1]):maxIt){nrefs[k,l]=nrefs[length(res[,1]),l]}
}
nrefs
res
es = read.table(paste0(resDir,"/stats.csv"),header=FALSE,sep=";")
res = read.table(paste0(resDir,"/stats.csv"),header=FALSE,sep=";")
res
executeAlgo <- function(query,resDir,numIteration,kwLimit){
#java command to execute algo from jar
# providing query and result directory
conf <- read.table('confRScript.conf',sep=";",header=TRUE)
command <- paste0('java -jar ',conf$jar,' ',query,' ',resDir,' ',numIteration,' ',kwLimit,' ',conf$conf)
show(paste('Executing ',command))
system(command)
res = read.table(paste0(resDir,"/stats.csv"),header=FALSE,sep=";")
return(res)
}
query
# CV for ≠ kw limit
queries <- c('transportation+network+urban+growth')
resDir <- 'junk'
limits<-c(2)#,5,10,15,20)
maxIt <- 20
for(query in queries){
nrefs = matrix(data=rep(0,maxIt*length(limits)),nrow=maxIt)
for(l in 1:length(limits)){
res = executeAlgo(query,resDir,maxIt,limits[l])
for(k in 1:maxIt){nrefs[k,l]=res[k,1]}
#for(k in length(res[,1]):maxIt){nrefs[k,l]=nrefs[length(res[,1]),l]}
}
show(nrefs)
}
a$a=1
a= data.frame()
a
a$a=1
a
help('list')
help('pairlist')
pairlist(a=1,b=2)
list(a=1,b=2)
list("a",1,"b",2)
x=list("a",1,"b",2)
x
x=pairlist()
for(query in queries){
x[[query]]=query
}
x
queries <- c('transportation+network+urban+growth','city+system')
x=pairlist()
for(query in queries){
x[[query]]=query
}
x
x[[queries[1]]]
x[[queries[2]]]
x[[queries[3]]]
queries <- c('transportation+network+urban+growth','city+system')
resDir <- 'junk'
limits<-c(2)#,5,10,15,20)
maxIt <- 2
res=pairlist()
for(query in queries){
nrefs = matrix(data=rep(0,maxIt*length(limits)),nrow=maxIt)
for(l in 1:length(limits)){
resIt = executeAlgo(query,resDir,maxIt,limits[l])
#for(k in 1:maxIt){nrefs[k,l]=res[k,1]}
#for(k in length(res[,1]):maxIt){nrefs[k,l]=nrefs[length(res[,1]),l]}
}
res[[query]]=resIt
}
res
res$`transportation+network+urban+growth`
queries <- c('transportation+network+urban+growth','city+system')
resDir <- 'junk'
limits<-c(2,5)#,7,10,15,20,25,30)
maxIt <- 2
res=pairlist()
for(query in queries){
nrefs = matrix(data=rep(0,maxIt*length(limits)),nrow=maxIt)
for(l in 1:length(limits)){
resIt = pairlist();
resIt[[limits[l]]] = executeAlgo(query,resDir,maxIt,limits[l])
#for(k in 1:maxIt){nrefs[k,l]=res[k,1]}
#for(k in length(res[,1]):maxIt){nrefs[k,l]=nrefs[length(res[,1]),l]}
}
res[[query]]=resIt
}
res
# CV for ≠ kw limit
queries <- c('transportation+network+urban+growth','city+system')
resDir <- 'junk'
limits<-c(2,5)#,7,10,15,20,25,30)
maxIt <- 2
res=pairlist()
for(query in queries){
nrefs = matrix(data=rep(0,maxIt*length(limits)),nrow=maxIt)
for(l in 1:length(limits)){
resIt = pairlist();
resIt[[l] = executeAlgo(query,resDir,maxIt,limits[l])
}
res[[query]]=resIt
}
queries <- c('transportation+network+urban+growth','city+system')
resDir <- 'junk'
limits<-c(2,5)#,7,10,15,20,25,30)
maxIt <- 2
res=pairlist()
for(query in queries){
nrefs = matrix(data=rep(0,maxIt*length(limits)),nrow=maxIt)
for(l in 1:length(limits)){
resIt = pairlist();
resIt[[l]] = executeAlgo(query,resDir,maxIt,limits[l])
}
res[[query]]=resIt
}
res
queries <- c('transportation+network+urban+growth','city+system')
resDir <- 'junk'
limits<-c(2,5)#,7,10,15,20,25,30)
maxIt <- 2
res=pairlist()
for(query in queries){
nrefs = matrix(data=rep(0,maxIt*length(limits)),nrow=maxIt)
resIt = pairlist();
for(l in 1:length(limits)){
resIt[[l]] = executeAlgo(query,resDir,maxIt,limits[l])
}
res[[query]]=resIt
}
res
help('save')
getwd()
save(res,'res.rdata')
save(res,file='res.rdata')
help('load')
rm(res)
res
load('res.rdata')
res
queries <- c('transportation+network+urban+growth')#,
#              'city+system+network',
#              'land+use+transport+interaction',
#              'population+density+transport',
#              'urban+structure+traffic',
#              'urban+flow+development',
#              'urban+morphogenesis+network',
#              'network+urban+modeling'
#              )
resDir <- 'junk'
limits<-c(2)#,5,7,10,15,20,25,30)
maxIt <- 20
res=pairlist()
for(query in queries){
nrefs = matrix(data=rep(0,maxIt*length(limits)),nrow=maxIt)
resIt = pairlist();
for(l in 1:length(limits)){
resIt[[l]] = executeAlgo(query,resDir,maxIt,limits[l])
}
res[[query]]=resIt
}
res
