
;;
;  general setup


to setup
  
  if headless? != true [ca]
  
  ; globals
  setup-globals
  
  ; world
  setup-world
  
  ; population density
  setup-density
  
  ; initial network
  setup-network
  
  patches:update-patch-values
  
  display:update-display
  
  reset-ticks
  
end



to setup-globals
  
  
  ;;;
  ;; Multi modeling options
  
  ; setup method
  ;  choices : "synthetic-settlement" ; "empty"
  set setup-method "synthetic-settlement"
  
  ; patch values
  set patch-value-function "linear-aggregation"
  
  ;;;
  ;; Global vars
  
  ;; setup
  set setup-rank-size-exp 0.8
  set setup-max-pop 200
  set setup-center-density 20
  ;set setup-center-number 5 
  set setup-outside-links-number 6
  
  set total-time-steps 20
  
  ; network update
  set network-update-time-mode "fixed-ticks"
  set network-update-ticks 5
  
  ; accessibility
  set accessibility-decay 10
  
  ; distance to roads
  set distance-to-roads-decay 10
  
  set network-vars-decay 1
  
  ; random seed
  let cseed seed if seed = 0 [set cseed (random 200000) - 100000]
  random-seed cseed
  
  
end


;;
;  world size
to setup-world
  
end




to setup-density
 
  if setup-method = "synthetic-settlement" [
    let i 1
    repeat setup-center-number [
      let current-pop setup-max-pop / (i ^ setup-rank-size-exp) set i i + 1
      let current-patch one-of patches
      create-cities 1 [move-to current-patch set city-population current-pop]
      apply-monocentric-kernel "poisson" (sqrt (current-pop / (2 * pi * setup-center-density))) setup-center-density "patch-population" current-patch
    ]
  ]
  
  if setup-method = "empty" [
     ask patches [set patch-population-share 0 set patch-population 0] 
  ]
  
end



to setup-network
  
  ; cities already assumed setup
  simple-connexification
  ; add cities on the edge to avoid bord effect on network topology
  create-cities setup-outside-links-number [let x 0 let y 0 ifelse random 2 = 0 [ifelse random 2 = 0[set x min-pxcor - 0.5][set x max-pxcor + 0.499] set y random-ycor][ifelse random 2 = 0 [set y max-pycor + 0.499][set y min-pycor - 0.5] set x random-ycor] setxy x y]
  simple-connexification
  
  ; compute initial nw measures
  network:update-network-measures
  
  ;
  cities:update-patches-closest-cities
  cities:update-cities-population
  
end




to setup-density-from-file
  
  ca
  if is-number? fixed-config-num [
    set density-file density-file-from-dir "setup" fixed-config-num;"../../../Results/Synthetic/Density/20151106_Grid/pop"
  ]
  if is-string? fixed-config-num [set density-file fixed-config-num]
  density-from-file density-file

  display:display-patches

end