;;;;;;;;;;;;;;;;;;
;; main
;;;;;;;;;;;;;;;;;;




;; go for one time step
to go
  ; random new centers number
  let new-centers-number 0
  ifelse random-center-number?[set new-centers-number 1 + (random max-new-centers-number)][set new-centers-number max-new-centers-number]
  
  let new-centers []
  ; assume each are drawn independantly according to a given spatial proba distribution
  repeat new-centers-number[
     set new-centers lput new-center new-centers
  ]
  set new-centers to-agentset new-centers ; dirty in complexity :/
  
  let nodes-to-connect []
  ; for each new center, find neighbor nodes
  ask new-centers [
    
     ; supplementary rule : if new center is closer from nw than another node, connects it perpendicularly
     ; complexity 
     connect-to-network
    
     ;
     set neigh-nodes direct-neighbor-nodes
     ;show neigh-nodes
     if neigh-nodes != nobody [
       ask neigh-nodes [
         set nodes-to-connect lput self nodes-to-connect
       ]
     ]
  ]
  
  ; remove duplicates from nodes to connect
  ; then connects each to corresponding centers
  set nodes-to-connect remove-duplicates nodes-to-connect
  
  ;show nodes-to-connect
  
  
  foreach nodes-to-connect [
     ; find centers such that ? \in neigh-nodes
     ; connect node to weighted barycenter of these
     ; then connect new node to each (induces local tree-like structure)
     let current-centers-to-connect new-centers with [neigh-nodes != nobody and member? ? neigh-nodes]
     ifelse count current-centers-to-connect = 1 [
        ask one-of current-centers-to-connect [create-road-with ? [new-road]]
     ][
       let x-bar sum ([weight * xcor] of current-centers-to-connect) / sum ([weight] of current-centers-to-connect)
       let y-bar sum ([weight * ycor] of current-centers-to-connect) / sum ([weight] of current-centers-to-connect)
       ;create barycenter and connects it
       create-nodes 1 [
         setxy x-bar y-bar set hidden? true
         create-road-with ? [new-road]
         create-roads-with current-centers-to-connect [new-road]
       ]
     ]
  ]
  
  
  
  
  ;; supplementary connexification step
  connexify-global-network
  
  
  tick
end



